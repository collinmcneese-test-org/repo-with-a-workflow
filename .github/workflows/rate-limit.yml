name: rate-limit

on:
  workflow_dispatch:
  push:

jobs:
  check:
    env:
      GH_TOKEN: ${{ github.token }}
    runs-on: ubuntu-latest
    steps:
    - id: fetch-rate-limit
      run: echo "result=$(gh api rate_limit)" | jq >> "${GITHUB_OUTPUT}"
    # Parse rate limit output from fetch-rate-limit step
    # Render in markdown table format, and set as output for use in next step
    - id: parse-rate-limit
      uses: actions/github-script@v6
      with:
        script: |
          let rateLimit = JSON.parse(${{ steps.fetch-rate-limit.outputs.result }});
          // Create the header row
          let table = "| Resource | Limit | Remaining | Reset |\n";
          table += "| --- | --- | --- | --- |\n";
          // Create a row for each resource
          for (let resource in rateLimit.resources) {
            table += `| ${resource} | ${rateLimit.resources[resource].limit} | ${rateLimit.resources[resource].remaining} | ${rateLimit.resources[resource].reset} |\n`;
          }
          // Set the output
          return table;
        result-encoding: string
    - id: render
      run: echo "${{ steps.parse-rate-limit.outputs.result }}" >> "${GITHUB_STEP_SUMMARY}"
